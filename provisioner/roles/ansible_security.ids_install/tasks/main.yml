---
# tasks file for ansible-role-snort

- name: verify required variable is defined
  fail:
    msg: "Required variable 'ids_provider' is not defined"
  when: ids_provider is not defined

- name: ensure ids_provider is valid
  fail:
    msg: "Provided value for 'ids_provider' is not valid, must be one of {{ ids_provider_list }}"
  when: ids_provider not in ids_provider_list

- name: install ids provider snort
  when: "ids_provider == 'snort'"
  block:
    # FIXME - pulledpork needs EPEL, which I already have on my VM templates by
    #         default but it's install/enablement should be handled
    - name: install snort and dependent packages - user defined
      yum:
        name: "{{ ids_install_pkgs }}"
        state: installed
      when: ids_install_pkgs is defined

    - name: install snort and dependent packages - defaults
      yum:
        name: "{{ ids_install_snort_pkgs }}"
        state: installed
      when: ids_install_pkgs is not defined

    # This is to work around a packaing problem with upstream snort's rpm install
    - name: symlink libdnet.1 to libdnet.so.1
      file:
        src: /usr/lib64/libdnet.so.1
        dest: /usr/lib64/libdnet.1
        state: link

    - name: create dynamic rules dir
      file:
        path: /usr/local/lib/snort_dynamicrules
        state: directory

    - name: install snort systemd service unit file
      template:
        src: snort.service.j2
        dest: /etc/systemd/system/snort.service
      notify: systemctl daemon-reload

    - name: install snort sysconfig file
      template:
        src: etc_sysconfig_snort.j2
        dest: /etc/sysconfig/snort
      notify: systemctl daemon-reload

    - name: get latest community rules
      get_url:
        url: "{{ ids_install_snort_rules }}"
        dest: "/tmp/community-rules.tar.gz"

    - name: unpack snort community rules
      unarchive:
        remote_src: true
        src: "/tmp/community-rules.tar.gz"
        dest: "/etc/snort/"

    - name: get latest registered rules
      get_url:
        url: "https://www.snort.org/rules/snortrules-snapshot-{{ ids_install_snort_registeredrule_ver }}.tar.gz?oinkcode=01f5c80369e5c15d6ac49f9b284d9f4b4ddb7064"
        dest: "/tmp/snortrules-snapshot-{{ ids_install_snort_registeredrule_ver }}.tar.gz"
      ignore_errors: true

    - name: unpack snort community rules
      unarchive:
        remote_src: true
        src: "/tmp/snortrules-snapshot-{{ ids_install_snort_registeredrule_ver }}.tar.gz"
        dest: "/etc/snort/"
      ignore_errors: true

    # FIXME - this is kind of a hack
    - name: ensure snort required files exist
      file:
        path: "{{item}}"
        state: touch
        modification_time: "preserve"
        access_time: "preserve"
      with_items:
        - /etc/snort/rules/white_list.rules
        - /etc/snort/rules/black_list.rules

    - name: ensure dirs exist as needed for pulledpork
      file:
        path: "/etc/snort/rules/iplists/"
        state: "directory"

    - name: run pulledpork
      shell: "/usr/bin/pulledpork -c /etc/pulledpork/pulledpork.conf && /usr/bin/touch /etc/pulledpork/ran_pulled_pork"
      args:
        creates: /etc/pulledpork/ran_pulled_pork

    - name: start and enable snort
      service:
        name: snort
        state: started
        enabled: true


- name: configure ids log normalization for provider snort
  when: "ids_provider == 'snort' and ids_install_normalize_logs"
  block:
    - name: install barnyard copr from rmonk
      get_url:
        url: "https://copr.fedorainfracloud.org/coprs/rmonk/Snort-IDS/repo/epel-7/rmonk-Snort-IDS-epel-7.repo"
        dest: "/etc/yum.repos.d/rmonk-Snort-IDS-epel-7.repo"

    - name: install barnyard
      yum:
        name: barnyard2
        state: installed

    - name: copy barnyard configuration template
      template:
        src: barnyard2.conf.j2
        dest: /etc/snort/barnyard2.conf

    - name: install barnyard2 systemd service unit file
      template:
        src: barnyard2.service.j2
        dest: /etc/systemd/system/barnyard2.service
      notify: systemctl daemon-reload

    - name: install barnyard2 sysconfig file
      template:
        src: etc_sysconfig_barnyard2.j2
        dest: /etc/sysconfig/barnyard2
      notify: systemctl daemon-reload

    - name: start barnyard2
      service:
        name: barnyard2
        state: started
        enabled: true
