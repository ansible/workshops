---
## This is needed for sshpass
- name: Install EPEL
  yum:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"
    state: present

- name: Install base packages
  yum:
    name:
      - vim
      - git
      - wget
      - nano
      - tree
      - sshpass
      - tmux
      - python-pip
      - ansible
      - gcc
    state: present
  register: yum_check
  until: yum_check is not failed
  retries: 4
  delay: 5

- name: Install ansible.cfg and vimrc in home directory
  template:
    src: ansible.cfg.j2
    dest: "/home/{{ username }}/.ansible.cfg"
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Install vimrc in home directory
  template:
    src: vimrc.j2
    dest: "/home/{{ username }}/.vimrc"
    owner: "{{ username }}"
    group: "{{ username }}"

- name: setup control node networking
  include_tasks: "networking.yml"
  when: workshop_type in ['networking', 'f5']

- name: setup control node security automation
  include_tasks: "security.yml"
  when: workshop_type == "security"

- name: RHEL mode - setup control node
  include_tasks: "rhel.yml"
  when: workshop_type == 'rhel'

- name: Devops mode - setup control node
  include_tasks: "devops.yml"
  when: workshop_type == 'devops'

- name: Windows mode - setup control node
  include_tasks: "windows.yml"
  when: workshop_type == 'windows'

- name: check to see if ansible tower is already up and running
  uri:
    url: https://localhost/api/v2/ping/
    method: GET
    user: admin
    password: "{{admin_password}}"
    validate_certs: false
    force_basic_auth: true
  register: check_tower
  ignore_errors: true
  when:
    - towerinstall is defined
    - towerinstall|bool

- name: install tower if knob is set
  include_tasks: "tower.yml"
  when:
    - towerinstall is defined
    - towerinstall|bool
    - check_tower is failed

- name: Ensure eula is accepted if posting license
  lineinfile:
    path: "{{playbook_dir}}/tower_license.json"
    line: '    "eula_accepted": true,'
    insertbefore: '"company_name"'
    state: present
  delegate_to: localhost
  run_once: true
  become: false
  when:
    - autolicense is defined
    - autolicense|bool

- name: Post license key
  uri:
    url: https://{{ansible_host}}/api/v2/config/
    method: POST
    user: admin
    password: "{{admin_password}}"
    body: "{{ lookup('file',playbook_dir+'/tower_license.json') }}"
    body_format: json
    validate_certs: false
    force_basic_auth: true
  when:
    - autolicense is defined
    - autolicense|bool

- name: INSTALL VSCODE AND XRDP
  include_tasks: gui.yml
  when: xrdp|bool
