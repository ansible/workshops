---
- name: grab facts for node1 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_node1": "{{ec2_name_prefix}}-node1"
  register: node1_node_facts

- name: grab facts for node2 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_node2": "{{ec2_name_prefix}}-node2"
  register: node2_node_facts

- name: grab facts for node3 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_node3": "{{ec2_name_prefix}}-node3"
  register: node3_node_facts

- name: grab facts for node4 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_node4": "{{ec2_name_prefix}}-node4"
  register: node4_node_facts

- name: add hosts to groups (ANSIBLE RHEL MODE)
  add_host:
    name: "{{ item.tags.Name }}"
    username: "{{ item.tags.Student }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    private_ip: "{{ item.private_ip_address }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    groups: lab_hosts,managed_nodes
  with_items:
    - "{{ node1_node_facts.instances }}"
    - "{{ node2_node_facts.instances }}"
    - "{{ node3_node_facts.instances }}"
    - "{{ node4_node_facts.instances }}"
  changed_when: false

- name: grab facts for towernode1 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_towernode1": "{{ec2_name_prefix}}-towernode1"
  register: towernode1_node_facts

- name: grab facts for towernode2 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_towernode2": "{{ec2_name_prefix}}-towernode2"
  register: towernode2_node_facts

- name: grab facts for towernode3 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_towernode3": "{{ec2_name_prefix}}-towernode3"
  register: towernode3_node_facts

- name: grab facts for towerdb node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_towerdb": "{{ec2_name_prefix}}-towerdb"
  register: towerdb_node_facts

- name: add hosts to groups (ANSIBLE TOWER NODE MODE)
  add_host:
    name: "{{ item.tags.Name }}"
    username: "{{ item.tags.Student }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    private_ip: "{{ item.private_ip_address }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    groups: lab_hosts,managed_nodes,tower_nodes
  with_items:
    - "{{ towernode1_node_facts.instances }}"
    - "{{ towernode2_node_facts.instances }}"
    - "{{ towernode3_node_facts.instances }}"
  changed_when: false

- name: Display all variables/facts known for a host
  debug:
    var: hostvars["gritest-student1-towernode3"]

# add the first tower cluster node to the group tower_master - this will be the machine where the setup.sh will run
- name: add hosts to groups (ANSIBLE TOWER NODE MODE)
  add_host:
    name: "{{ item.tags.Name }}"
    username: "{{ item.tags.Student }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    private_ip: "{{ item.private_ip_address }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    groups: lab_hosts,managed_nodes,tower_nodes,tower_master
  with_items:
    - "{{ towernode1_node_facts.instances }}"
  changed_when: false

- name: add hosts to groups (ANSIBLE TOWER DB MODE)
  add_host:
    name: "{{ item.tags.Name }}"
    username: "{{ item.tags.Student }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    private_ip: "{{ item.private_ip_address }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    groups: lab_hosts,managed_nodes,towerdb
  with_items:
    - "{{ towerdb_node_facts.instances }}"
  changed_when: false

- name: Generate student inventories
  template:
    src: instances_advanced_tower.txt.j2
    dest: "{{ playbook_dir }}/{{ec2_name_prefix}}/student{{item}}-instances.txt"
  with_sequence: count="{{ student_total }}"

- name: Generate instructor inventory
  template:
    src: instructor_inventory_advanced_tower.j2
    dest: "{{ playbook_dir }}/{{ec2_name_prefix}}/instructor_inventory.txt"
