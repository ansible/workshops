---
- name: find ami for netapp
  ec2_ami_facts:
    region: "{{ ec2_region }}"
    owners: "{{ ec2_info[netapp].owners }}"
    filters:
      name: "{{ ec2_info[netapp].filter }}"
      architecture: "{{ ec2_info[netapp].architecture }}"
  register: amis

- name: save ami for netapp
  set_fact:
    netapp_ami: >
      {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

- name: Create EC2 instances for netapp
  ec2:
    assign_public_ip: true
    key_name: "{{ ec2_name_prefix }}-key"
    group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_info[rhel].size }}"
    image: "{{ netapp_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    count_tag:
      Workshop_netapp: "{{ec2_name_prefix}}-netapp"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ ec2_info[rhel].disk_space }}"
        delete_on_termination: true
  register: netapp_output

- name: Ensure tags are present for netapp_output
  ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{item.1.id}}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{item.0 + 1}}-netapp"
      Workshop_netapp: "{{ec2_name_prefix}}-netapp"
      Workshop: "{{ec2_name_prefix}}"
      Index: "{{ item[0] }}"
      Student: "student{{item.0 + 1}}"
      AWS_USERNAME: "{{ aws_user }}"
      Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{student_total}}"
      short_name: "netapp"
      username: "{{ec2_info[rhel].username}}"
      launch_time: "{{item.1.launch_time}}"
  with_indexed_items:
    - "{{ netapp_output.instances }}"
  when: netapp_output.instance_ids is not none
