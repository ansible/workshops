---
- name: Create Subnet2 ENI async attacker (SECURITY MODE)
  ec2_eni:
    instance_id: '{{ item[1] }}'
    subnet_id: '{{ ec2_vpc_subnet2_id }}'
    state: present
    region: '{{ ec2_region }}'
    delete_on_termination: true
    attached: true
    device_index: 1
  with_indexed_items:
    - '{{ attacker_output["instance_ids"] }}'
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ec2_subnet2_eni_attacker_async
  when: attacker_output['instance_ids'] is not none

- name: Create Subnet2 ENI async snort (SECURITY MODE)
  ec2_eni:
    instance_id: '{{ item[1] }}'
    subnet_id: '{{ ec2_vpc_subnet2_id }}'
    state: present
    region: '{{ ec2_region }}'
    delete_on_termination: true
    attached: true
    device_index: 1
  with_indexed_items:
    - '{{ snort_output["instance_ids"] }}'
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ec2_subnet2_eni_snort_async
  when: snort_output['instance_ids'] is not none

- name: Wait for async 2nd net iface creation to complete (attacker)
  async_status:
    jid: "{{ item['ansible_job_id'] }}"
  register: wait_eni2_creation_attacker
  when: "'ansible_job_id' in item"
  until: wait_eni2_creation_attacker.finished
  retries: "{{ async_wait_for_retries }}"
  loop: "{{ ('results' in ec2_subnet2_eni_attacker_async) | ternary(ec2_subnet2_eni_attacker_async['results'], []) }}"

- name: Wait for async 2nd net iface creation to complete (snort)
  async_status:
    jid: "{{ item['ansible_job_id'] }}"
  register: wait_eni2_creation_snort
  when: "'ansible_job_id' in item"
  until: wait_eni2_creation_snort.finished
  retries: "{{ async_wait_for_retries }}"
  loop: "{{ ('results' in ec2_subnet2_eni_snort_async) | ternary(ec2_subnet2_eni_snort_async['results'], []) }}"

- name: Ensure Subnet2 ENI Tags async attacker (SECURITY MODE)
  ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item[1]['interface']['id'] }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{item[0] + 1}}-attacker-eni2"
      Username: "{{ aws_user }}"
      Info: "Username that provisioned this-> {{ aws_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{student_total}}"
      Subnet: '{{ ec2_name_prefix }}-subnet2'
      Workshop: "{{ec2_name_prefix}}"
  when: "(item|length|int > 1) and ('interface' in item[1])"
  with_indexed_items:
    - "{{ ('results' in wait_eni2_creation_attacker) | ternary(wait_eni2_creation_attacker['results'],[]) }}"
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ec2_subnet2_eni_tags_attacker_async

- name: Ensure Subnet2 ENI Tags async snort (SECURITY MODE)
  ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item[1]['interface']['id'] }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{item[0] + 1}}-snort-eni2"
      Username: "{{ aws_user }}"
      Info: "Username that provisioned this-> {{ aws_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{student_total}}"
      Subnet: '{{ ec2_name_prefix }}-subnet2'
      Workshop: "{{ec2_name_prefix}}"
  when: "(item|length|int > 1) and ('interface' in item[1])"
  with_indexed_items:
    - "{{ ('results' in wait_eni2_creation_snort) | ternary(wait_eni2_creation_snort['results'], []) }}"
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ec2_subnet2_eni_tags_snort_async

- name: Wait for async tag creation to complete (subnet2)
  async_status:
    jid: "{{ item['ansible_job_id'] }}"
  register: wait_for_ec2_tag_creation
  when: "'ansible_job_id' in item"
  until: wait_for_ec2_tag_creation.finished
  retries: "{{ async_wait_for_retries }}"
  loop: >
    {{ ('results' in ec2_subnet2_eni_tags_attacker_async) | ternary(ec2_subnet2_eni_tags_attacker_async['results'], []) }}
    + {{ ('results' in ec2_subnet2_eni_snort_async) | ternary(ec2_subnet2_eni_snort_async['results'], []) }}
