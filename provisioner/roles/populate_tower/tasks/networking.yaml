---
# ORGS
- name: CREATE NETWORK ORGANIZATION
  tower_organization:
    name: "REDHAT NETWORK ORGANIZATION"
    description: "RedHat Network Organization"
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: CREATE COMPUTE ORGANIZATION
  tower_organization:
    name: "REDHAT COMPUTE ORGANIZATION"
    description: "RedHat Compute Organization"
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

# INVENTORY
- name: CREATE INVENTORY
  tower_inventory:
    name: "Workshop Inventory"
    organization: REDHAT NETWORK ORGANIZATION
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

# TEAMS
- name: CREATE NETOPS TEAM
  tower_team:
    name: "Netops"
    description: "Network Ops Team"
    organization: "REDHAT NETWORK ORGANIZATION"
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: CREATE NETADMIN TEAM
  tower_team:
    name: "Netadmin"
    description: "Network Admin Team"
    organization: "REDHAT NETWORK ORGANIZATION"
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: CREATE COMPUTE TIER1 TEAM
  tower_team:
    name: "Compute T1"
    description: "Computer T1 Team"
    organization: "REDHAT COMPUTE ORGANIZATION"
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: CREATE COMPUTE TIER2 TEAM
  tower_team:
    name: "Compute T2"
    description: "Computer T1 Team"
    organization: "REDHAT COMPUTE ORGANIZATION"
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

# USERS
- name: ADD USER NWOPERATOR
  tower_user:
    username: network-operator
    password: "{{ admin_password }}"
    email: nwops@redhat.com
    first_name: Issac
    last_name: Assimov
    state: present
    superuser: false
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: ADD USER NWADMIN
  tower_user:
    username: network-admin
    password: "{{ admin_password }}"
    email: nwadmin@redhat.com
    first_name: Larry
    last_name: Niven
    state: present
    superuser: false
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: ADD USER BOB
  tower_user:
    username: bbelcher
    password: "{{ admin_password }}"
    email: bbelcher@redhat.com
    first_name: Bob
    last_name: Belcher
    state: present
    superuser: true
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: ADD USER TINA
  tower_user:
    username: tbelcher
    password: "{{ admin_password }}"
    email: tbelcher@redhat.com
    first_name: Tina
    last_name: Belcher
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: ADD USER LOUISE
  tower_user:
    username: lbelcher
    password: "{{ admin_password }}"
    email: lbelcher@redhat.com
    first_name: Louise
    last_name: Belcher
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: ADD USER LINDA
  tower_user:
    username: libelcher
    password: "{{ admin_password }}"
    email: libelcher@redhat.com
    first_name: Linda
    last_name: Belcher
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: ADD USER GENE
  tower_user:
    username: gbelcher
    password: "{{ admin_password }}"
    email: gbelcher@redhat.com
    first_name: Gene
    last_name: Belcher
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

# PROJECT
# this displays warning, documented here: https://github.com/ansible/ansible/issues/60327
- name: ADD REPO INTO TOWER
  tower_project:
    name: "Workshop Project"
    organization: "REDHAT NETWORK ORGANIZATION"
    scm_type: git
    scm_url: "https://github.com/network-automation/tower_workshop"
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

# PERMISSIONS
- name: ENSURE THAT NWADMIN BELONGS TO THE NW ORG
  tower_role:
    user: network-admin
    organization: "REDHAT NETWORK ORGANIZATION"
    role: member
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    validate_certs: false

- name: ENSURE THAT NWADMIN IS AN ORG ADMIN
  tower_role:
    user: network-admin
    organization: "REDHAT NETWORK ORGANIZATION"
    role: admin
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    validate_certs: false

- name: ENSURE THAT NWOP BELONGS TO THE NW ORG
  tower_role:
    user: network-operator
    organization: "REDHAT NETWORK ORGANIZATION"
    role: member
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    validate_certs: false

- name: ENSURE THAT NWOP CAN ONLY EXECUTE TEMPLATES
  tower_role:
    user: network-operator
    target_team: "Netops"
    role: member
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    validate_certs: false

- name: ADD CREDENTIAL INTO TOWER
  tower_credential:
    username: ec2-user
    name: "Workshop Credential"
    ssh_key_data: "{{ lookup('file', playbook_dir +'/' + ec2_name_prefix + '/' + ec2_name_prefix + '-private.pem') }}"
    kind: ssh
    organization: REDHAT NETWORK ORGANIZATION
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: ADD TOWER CREDENTIAL INTO TOWER
  tower_credential:
    host: "{{ansible_host}}"
    username: admin
    password: "{{admin_password}}"
    name: "Tower Credential"
    kind: tower
    organization: Default
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: IMPORT INVENTORY
  shell: 'tower-manage inventory_import --source=/home/{{ username }}/networking-workshop/lab_inventory/hosts --inventory-name="Workshop Inventory"'

# REMOVE HARD CODED SSH_KEY VAR
- name: REMOVE HARD CODED SSH KEY VAR IN INVENTORY
  uri:
    url: "https://{{ansible_host}}/api/v2/inventories/2/"
    user: "admin"
    password: "{{admin_password}}"
    method: PATCH
    validate_certs: false
    force_basic_auth: true
    body_format: json
    body: ' {"variables": ""}'
    status_code:
      - 200
      - 204
  register: result_uri
  ignore_errors: true

# JOB TEMPLATES
# Commenting out as students will not create this#
# - name: CREATE BACKUP JOB IN TOWER
#   tower_job_template:
#     name: "Network-Backup"
#     job_type: "run"
#     inventory: "Workshop Inventory"
#     project: "Workshop Project"
#     playbook: "network_backup.yml"
#     credential: "Workshop Credential"
#     state: "present"
#     limit: "cisco"
#     tower_username: admin
#     tower_password: "{{ admin_password }}"
#     tower_host: "{{ ansible_host }}"
#     tower_verify_ssl: no

- name: CREATE SHOW COMMAND JOB IN TOWER
  tower_job_template:
    name: "Network-Commands"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "network_commands.yml"
    credential: "Workshop Credential"
    state: "present"
    limit: "cisco"
    survey_enabled: true
    survey_spec: "{{ lookup('template', 'survey_spec.json') }}"
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: create reload muiltivendor network template
  tower_job_template:
    name: "Network-Reload"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "network_reload.yml"
    credential: "Workshop Credential"
    state: "present"
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: create user job in tower
  tower_job_template:
    name: "Network-User"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "network_user.yml"
    credential: "Workshop Credential"
    state: "present"
    survey_enabled: true
    survey_spec: "{{ lookup('template', 'user.json') }}"
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: CREATE SYSTEM JOB IN TOWER
  tower_job_template:
    name: "Network-System"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "network_system.yml"
    credential: "Workshop Credential"
    state: "present"
    limit: "cisco"
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: CREATE TIME JOB IN TOWER
  tower_job_template:
    name: "Network-Time"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "network_time.yml"
    credential: "Workshop Credential"
    state: "present"
    limit: "cisco"
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

- name: Create network report job
  tower_job_template:
    name: "Network-Report"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "network_report.yml"
    credential: "Workshop Credential"
    state: "present"
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false

# JOB TEMPLATE PERMISSIONS
- name: ENSURE THAT NWOP CAN EXECUTE BACKUP AND SHOW COMMANDS
  tower_role:
    user: network-operator
    role: execute
    job_template: "{{ item }}"
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    validate_certs: false
  loop:
    - "Network-Commands"

- name: ENSURE THAT NW ORG CAN USE THE WS INV
  tower_role:
    role: use
    inventory: "Workshop Inventory"
    team: "{{ item }}"
    state: present
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    validate_certs: false
  tags:
    - inv
  loop:
    - Netops
    - Netadmin
