# Ansible template based on a systemd --new unit autogenerated by Podman 2.2.1

[Unit]
Description={{service_name}} (Ansible Managed Fedora IoT Podman container service)
Documentation=man:podman-generate-systemd(1)
Wants=network.target
After=network-online.target

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
ExecStartPre=/bin/rm -f %t/afiot-container-{{service_name}}.pid %t/afiot-container-{{service_name}}.ctr-id
ExecStart=/usr/bin/podman run --conmon-pidfile %t/afiot-container-{{service_name}}.pid --cidfile %t/afiot-container-{{service_name}}.ctr-id --cgroups=no-conmon --replace -d --name afiot-{{service_name}} {% if container_port_mapping is defined %} -p {{container_port_mapping}} {% endif %} {% if container_healthcheck_cmd is defined %} --health-cmd "{{container_healthcheck_cmd}}" --health-interval {{container_healthcheck_interval}} --health-retries {{container_healthcheck_retries}} {% endif %} {{container_image}}:{{container_tag}}
ExecStop=/usr/bin/podman stop --ignore --cidfile %t/afiot-container-{{service_name}}.ctr-id -t 10
ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/afiot-container-{{service_name}}.ctr-id
PIDFile=%t/afiot-container-{{service_name}}.pid
KillMode=control-group
Type=forking

[Install]
WantedBy=multi-user.target default.target
