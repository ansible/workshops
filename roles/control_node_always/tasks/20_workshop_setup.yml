---
- name: template out motd
  template:
    src: motd.j2
    dest: /etc/motd

- name: template ansible-navigator.yml into home directory
  template:
    src: ansible-navigator.yml.j2
    dest: "/home/{{ username }}/.ansible-navigator.yml"
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Put ssh-key in proper spot for student
  copy:
    src: "{{ output_dir }}/{{ ec2_name_prefix }}-private.pem"
    dest: "/home/{{ username }}/.ssh/id_rsa"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0400

- name: clean out /tmp/workshops
  file:
    path: /tmp/workshops
    state: absent

- name: Clone workshops repo
  git:
    accept_hostkey: true
    clone: true
    dest: /tmp/workshops
    repo: '{{ ansible_workshops_url | default("https://github.com/ansible/workshops.git") }}'
    version: '{{ ansible_workshops_version | default("main") }}'
    refspec: '{{ ansible_workshops_refspec | default("") }}'
    force: true

- name: Move relevant exercises to correct location
  copy:
    src: '{{ "/tmp/workshops/" + exercise_src_location | default("exercises/ansible_" + workshop_type) + "/" }}'
    dest: '{{ "/home/" + username + "/" + exercise_dest_location | default(workshop_type + "-workshop") }}'
    remote_src: true
    owner: "{{ username }}"
    group: "{{ username }}"
    local_follow: true
  ignore_errors: true  # Required for testing local development

- name: Create lab inventory directory
  file:
    state: directory
    path: /home/{{ username }}/lab_inventory

- name: Put student inventory in proper spot
  copy:
    src: "{{ output_dir }}/{{ student }}-instances.txt"
    dest: /home/{{ username }}/lab_inventory/hosts
    owner: "{{ username }}"
    group: "{{ username }}"
  when: username in inventory_hostname

- name: Copy instructor inventory to student1
  copy:
    src: "{{ output_dir }}/instructor_inventory.txt"
    dest: /tmp/instructor-inventory
    owner: "{{ username }}"
    group: "{{ username }}"
  when: '"student1-ansible-1" in inventory_hostname'

- name: Install ansible.cfg in home directory
  template:
    src: ansible.cfg.j2
    dest: "/etc/ansible/ansible.cfg"

# Pull specific EE for each workshop based on workshop name
- name: Pull execution environment for {{ workshop_type }} workshop
  become_user: "{{ username }}"
  containers.podman.podman_image:
    name: "{{ lookup('vars', workshop_type + '_ee') }}"
  register: podman_pull
  until: podman_pull is not failed
  retries: 5

# This may look redundant, but you can't put these in a loop because the
# ansible_user will not be templated the way you expect when running under
# Controller/AWX
