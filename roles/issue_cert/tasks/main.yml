---
- name: Make sure nginx and certbot are installed
  ansible.builtin.dnf:
    name:
      - nginx
      - certbot
    state: latest
    disable_gpg_check: true

- name: Set httpd_can_network_connect flag on and keep it persistent across reboots
  redhat.rhel_system_roles.seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true

# If this fails check out status of certbot: https://letsencrypt.status.io/
- name: Try to issue SSL certificate
  block:
    - name: Issue SSL cert
      ansible.builtin.shell: certbot certonly --standalone -d {{ dns_name }} --email ansible-network@redhat.com --noninteractive --agree-tos
      register: issue_cert
      until: issue_cert is not failed
      retries: 5
  rescue:
    - name: Error with SSL cert
      ansible.builtin.debug:
        msg: "Unable to retrieve SSL cert, ERROR, continuing on without cert..."

    - name: Append dns_information failure
      ansible.builtin.set_fact:
        dns_information:
          - "{{ dns_information }}"
          - "The Lets Encrypt certbot failed for the controller node, please check https://letsencrypt.status.io/ to make sure the service is running"

- name: Create SSL directory for NGINX
  file:
    path: /etc/nginx/ssl
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '0755'

- name: Move SSL Key
  ansible.builtin.copy:
    remote_src: true
    src: "/etc/letsencrypt/live/{{ dns_name }}/privkey.pem"
    dest: /etc/nginx/ssl/aap.key
    owner: ec2-user
    group: ec2-user
    mode: '0400'

- name: Move full chain cert
  ansible.builtin.copy:
    remote_src: true
    src: "/etc/letsencrypt/live/{{ dns_name }}/fullchain.pem"
    dest: /etc/nginx/ssl/aap.crt
    owner: ec2-user
    group: ec2-user
    mode: '0640'

- name: Template out nginx
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: ec2-user
    group: ec2-user
    mode: '0644'

- name: Restart service nginx, in all cases
  ansible.builtin.service:
    name: nginx
    state: restarted
