---
- name: Grab facts for rtr1 node (NETWORK MODE)
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_rtr1": "{{ ec2_name_prefix }}-rtr1"
  register: rtr1_node_facts

- name: Grab facts for rtr2 node (NETWORK MODE)
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_rtr2": "{{ ec2_name_prefix }}-rtr2"
  register: rtr2_node_facts

- name: Grab facts for rtr3 node (NETWORK MODE)
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_rtr3": "{{ ec2_name_prefix }}-rtr3"
  register: rtr3_node_facts

- name: Grab facts for rtr4 node (NETWORK MODE)
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_rtr4": "{{ ec2_name_prefix }}-rtr4"
  register: rtr4_node_facts

- name: Add RTR1 routers to inventory
  ansible.builtin.add_host:
    name: "{{ item.tags.Name }}"
    short_name: "{{ item.tags.short_name }}"
    student_number: "{{ item.tags.Index|int + 1}}"
    ansible_host: "{{ item.public_ip_address }}"
    username: "{{ item.tags.Student }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_libssh_publickey_algorithms: "ssh-rsa"
    ansible_network_cli_ssh_type: libssh
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ ec2_name_prefix|lower }}/{{ ec2_name_prefix|lower }}-private.pem"
    private_ip: "{{ item.private_ip_address }}"
    ansible_network_os: "{{ item.tags.ansible_network_os }}"
    groups:
      - routers
      - core
      - dmvpn
  loop: "{{ rtr1_node_facts.instances|flatten(levels=1) }}"

- name: Add RTR2 routers to inventory
  ansible.builtin.add_host:
    name: "{{ item.tags.Name }}"
    short_name: "{{ item.tags.short_name }}"
    student_number: "{{ item.tags.Index|int + 1 }}"
    ansible_host: "{{ item.public_ip_address }}"
    username: "{{ item.tags.Student }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ ec2_name_prefix|lower }}/{{ ec2_name_prefix|lower }}-private.pem"
    private_ip: "{{ item.private_ip_address }}"
    ansible_network_os: "{{ item.tags.ansible_network_os }}"
    groups:
      - routers
      - core
  loop: "{{ rtr2_node_facts.instances|flatten(levels=1) }}"

- name: Add RTR3 routers to inventory
  ansible.builtin.add_host:
    name: "{{ item.tags.Name }}"
    short_name: "{{ item.tags.short_name }}"
    student_number: "{{ item.tags.Index|int + 1 }} "
    ansible_host: "{{ item.public_ip_address }}"
    username: "{{ item.tags.Student }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ ec2_name_prefix|lower }}/{{ ec2_name_prefix|lower }}-private.pem"
    private_ip: "{{ item.private_ip_address }}"
    ansible_network_os: "{{ item.tags.ansible_network_os }}"
    groups:
      - routers
      - access
  loop: "{{ rtr3_node_facts.instances|flatten(levels=1) }}"

- name: Add RTR4 routers to inventory
  ansible.builtin.add_host:
    name: "{{ item.tags.Name }}"
    short_name: "{{ item.tags.short_name }}"
    student_number: "{{ item.tags.Index|int + 1 }}"
    ansible_host: "{{ item.public_ip_address }}"
    username: "{{ item.tags.Student }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ ec2_name_prefix|lower }}/{{ ec2_name_prefix|lower }}-private.pem"
    private_ip: "{{ item.private_ip_address }}"
    ansible_network_os: "{{ item.tags.ansible_network_os }}"
    groups:
      - routers
      - access
  loop: "{{ rtr4_node_facts.instances|flatten(levels=1) }}"

- name: SEAN DEBUG STATEMENT
  debug:
    var: groups['routers']
