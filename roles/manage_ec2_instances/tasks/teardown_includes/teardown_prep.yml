---
- name: Get the VPC ID for {{ ec2_name_prefix }}
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:Name": "{{ ec2_name_prefix }}-vpc"
    region: "{{ ec2_region }}"
  register: vpc_net_facts

- name: debug vpc_net_facts
  debug:
    var: vpc_net_facts
  when: debug_teardown


- name: Get the VPC ID 2 for {{ ec2_name_prefix }} (NETWORK MODE)
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:Name": "{{ ec2_name_prefix }}-vpc2"
    region: "{{ ec2_region }}"
  register: vpc_net_facts2
  when: workshop_type == 'networking' or workshop_type == 'network' or workshop_type == 'demo'

- name: debug vpc_net_facts2
  debug:
    var: vpc_net_facts2
  when: debug_teardown

- name: debugging vpc id for {{ ec2_name_prefix }}
  debug:
    msg: "vpc id:'{{vpc_net_facts.vpcs[0].id}}'"
  when:
    - debug_teardown
    - vpc_net_facts.vpcs|length > 0

- name: use set fact for easier variables
  set_fact:
    ec2_vpc_id: "{{vpc_net_facts.vpcs[0].id|default('WORKSHOP_UNDEF')}}"
    ec2_security_group: "{{ ec2_name_prefix }}-insecure_all"
  when: ec2_security_group is undefined

- name: debug ec2_vpc_id
  debug:
    var: ec2_vpc_id
  when: debug_teardown

- name: debug ec2_security_group
  debug:
    var: ec2_security_group
  when: debug_teardown

# VPC 2 for network automation
- name: dynamic instance variable creation since VPC was not supplied by user (NETWORK MODE)
  set_fact:
    ec2_vpc_id2: "{{vpc_net_facts2.vpcs[0].id}}"
    ec2_security_group2: "{{ ec2_name_prefix }}-insecure_all2"
  when:
    - workshop_type == 'networking' or workshop_type == 'network' or workshop_type == 'demo'
    - vpc_net_facts2.vpcs|length > 0
    - ec2_security_group2 is undefined

- name: debug ec2_vpc_id2
  debug:
    var: ec2_vpc_id2
  when:
    - debug_teardown
    - ec2_vpc_id2 is defined
    - workshop_type == 'networking' or workshop_type == 'network' or workshop_type == 'demo'

- name: debug ec2_security_group2
  debug:
    var: ec2_security_group2
  when: debug_teardown

# retrieve instances for VPC 1
#- name: grab vpc node facts for workshop
#  ec2_instance_info:
#    region: "{{ ec2_region }}"
#    filters:
#      "vpc-id": "{{ec2_vpc_id}}"
#  register: all_workshop_vpc_nodes
#
#- name: debug all_workshop_vpc_nodes
#  debug:
#    var: all_workshop_vpc_nodes
#  when: debug_teardown
#
## retrieve instances for VPC 2
#- name: grab vpc2 node facts for workshop
#  amazon.aws.ec2_instance_info:
#    region: "{{ ec2_region }}"
#    filters:
#      "vpc-id": "{{ec2_vpc_id2}}"
#  register: all_workshop_vpc2_nodes
#  when: ec2_vpc_id2 is defined
#
#- name: debug all_workshop_vpc2_nodes
#  debug:
#    var: all_workshop_vpc2_nodes
#  when:
#    - debug_teardown
#    - ec2_vpc_id2 is defined
#
