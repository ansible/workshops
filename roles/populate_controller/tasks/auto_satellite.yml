---
- name: Debug the student number via the username var
  ansible.builtin.debug:
    msg:
      - "student: {{ student_number }}"
      - "{{ groups['rhel'] }}"

- name: Filter hosts containing student number
  ansible.builtin.set_fact:
    student_hosts: "{{ groups['rhel'] | select('search', student_number ~ '-') | list }}"
    control_nodes: "{{ groups['control_nodes'] | select('search', student_number ~ '-') | list }}"
    satellite_nodes: "{{ groups['satellite'] | select('search', student_number ~ '-') | list }}"

- name: Debug hosts for
  ansible.builtin.debug:
    msg: "{{ student_hosts }}"

- name: Add rhel hosts into controller inventory
  awx.awx.host:
    name: "{{ hostvars[item].short_name }}.example.com"
    enabled: true
    inventory: "Workshop Inventory"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false
    variables:
      ansible_host: "{{ hostvars[item].private_ip }}"
  loop: "{{ student_hosts }}"

- name: Add control node into controller inventory
  awx.awx.host:
    name: "{{ hostvars[item].short_name }}.example.com"
    enabled: true
    inventory: "Workshop Inventory"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false
    variables:
      ansible_host: "{{ hostvars[item].private_ip }}"
  loop: "{{ control_nodes }}"

- name: Add satellite_nodes into controller inventory
  awx.awx.host:
    name: "{{ hostvars[item].short_name }}.example.com"
    enabled: true
    inventory: "Workshop Inventory"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false
    variables:
      ansible_host: "{{ hostvars[item].private_ip }}"
  loop: "{{ satellite_nodes }}"

- name: Use COP controller_configuration collection
  vars:
    controller_validate_certs: false
    controller_hostname: "https://{{ ansible_host }}"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
  ansible.builtin.include_role:
    name: '{{ setup_controller }}'
  loop:
    - 'infra.controller_configuration.hosts'
    - 'infra.controller_configuration.organizations'
    - 'infra.controller_configuration.users'
    - 'infra.controller_configuration.teams'
    - 'infra.controller_configuration.projects'
    - 'infra.controller_configuration.job_templates'
    - 'infra.controller_configuration.roles'
    - 'infra.controller_configuration.groups'
  loop_control:
    loop_var: setup_controller

- name: Add group rhel
  awx.awx.group:
    name: rhel
    inventory: "Workshop Inventory"
    children:
      - "{{ rhel | default('rhel8') }}"
    preserve_existing_hosts: true
    preserve_existing_children: true
    validate_certs: false
    controller_host: "https://{{ ansible_host }}"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
  register: add_group_rhel
  until: add_group_rhel is not failed


- name: Block import centos7 servers
  when: centos7 is defined
  block:
    - name: Filter hosts containing student number
      ansible.builtin.set_fact:
        centos7_hosts: "{{ groups['centos7'] | select('search', student_number ~ '-') | list }}"

    - name: Add centos7 hosts into controller inventory
      awx.awx.host:
        name: "{{ hostvars[item].short_name }}.example.com"
        enabled: true
        inventory: "Workshop Inventory"
        controller_username: admin
        controller_password: "{{ admin_password }}"
        controller_host: "https://{{ ansible_host }}"
        validate_certs: false
        variables:
          ansible_host: "{{ hostvars[item].private_ip }}"
      loop: "{{ centos7_hosts }}"

    - name: Add centos7 group
      awx.awx.group:
        name: centos7
        inventory: "Workshop Inventory"
        hosts:
          - node4.example.com
          - node5.example.com
          - node6.example.com
        preserve_existing_hosts: true
        preserve_existing_children: true
        validate_certs: false
        controller_host: "https://{{ ansible_host }}"
        controller_username: "admin"
        controller_password: "{{ admin_password }}"

    - name: Add centos devices to node group
      awx.awx.group:
        name: node
        inventory: "Workshop Inventory"
        hosts:
          - node4.example.com
          - node5.example.com
          - node6.example.com
        preserve_existing_hosts: true
        preserve_existing_children: true
        validate_certs: false
        controller_host: "https://{{ ansible_host }}"
        controller_username: "admin"
        controller_password: "{{ admin_password }}"

    - name: Add centos group
      awx.awx.group:
        name: centos
        inventory: "Workshop Inventory"
        children:
          - centos7
        preserve_existing_hosts: true
        preserve_existing_children: true
        variables:
          ansible_user: centos
        validate_certs: false
        controller_host: "https://{{ ansible_host }}"
        controller_username: "admin"
        controller_password: "{{ admin_password }}"
