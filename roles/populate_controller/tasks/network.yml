---
# host
- name: Add backup server host
  awx.awx.host:
    name: "backup-server"
    description: "this server is where we backup network configuration"
    inventory: "Workshop Inventory"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false
    variables:
      note: in production these passwords would be encrypted in vault
      ansible_user: "{{ username }}"
      ansible_password: "{{ admin_password }}"
      ansible_host: "{{ ansible_host }}"

# ORGS
- name: create network organization
  awx.awx.organization:
    name: "Red Hat network organization"
    description: "Red Hat Network Organization"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false
    galaxy_credentials:
      - "Ansible Galaxy"

- name: create compute organization
  awx.awx.organization:
    name: "Red Hat compute organization"
    description: "Red Hat Compute Organization"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false
    galaxy_credentials:
      - "Ansible Galaxy"

# teams
- name: create netops team
  awx.awx.team:
    name: "Netops"
    description: "Network Ops Team"
    organization: "Red Hat network organization"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: create NETADMIN team
  awx.awx.team:
    name: "Netadmin"
    description: "Network Admin Team"
    organization: "Red Hat network organization"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: create compute TIER1 team
  awx.awx.team:
    name: "Compute T1"
    description: "Computer T1 Team"
    organization: "Red Hat compute organization"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: create compute tier2 team
  awx.awx.team:
    name: "Compute T2"
    description: "Computer T1 Team"
    organization: "Red Hat compute organization"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

# USERS
- name: add user nwoperator
  awx.awx.user:
    username: network-operator
    password: "{{ admin_password }}"
    email: nwops@redhat.com
    first_name: Issac
    last_name: Assimov
    state: present
    superuser: false
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: add user NWADMIN
  awx.awx.user:
    username: network-admin
    password: "{{ admin_password }}"
    email: nwadmin@redhat.com
    first_name: Larry
    last_name: Niven
    state: present
    superuser: false
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: add user BOB
  awx.awx.user:
    username: bbelcher
    password: "{{ admin_password }}"
    email: bbelcher@redhat.com
    first_name: Bob
    last_name: Belcher
    state: present
    superuser: true
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: add user TINA
  awx.awx.user:
    username: tbelcher
    password: "{{ admin_password }}"
    email: tbelcher@redhat.com
    first_name: Tina
    last_name: Belcher
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: add user LOUISE
  awx.awx.user:
    username: lbelcher
    password: "{{ admin_password }}"
    email: lbelcher@redhat.com
    first_name: Louise
    last_name: Belcher
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: add user LINDA
  awx.awx.user:
    username: libelcher
    password: "{{ admin_password }}"
    email: libelcher@redhat.com
    first_name: Linda
    last_name: Belcher
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: add user GENE
  awx.awx.user:
    username: gbelcher
    password: "{{ admin_password }}"
    email: gbelcher@redhat.com
    first_name: Gene
    last_name: Belcher
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

# PROJECT
# this displays warning, documented here: https://github.com/ansible/ansible/issues/60327
- name: add repo into controller
  awx.awx.project:
    name: "Workshop Project"
    organization: "Red Hat network organization"
    scm_type: git
    scm_url: "https://github.com/IPvSean/toolkit"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

# PERMISSIONS
- name: ensure that nwadmin belongs to the nw org
  awx.awx.role:
    user: network-admin
    organization: "Red Hat network organization"
    role: member
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: ensure that nwadmin is an org admin
  awx.awx.role:
    user: network-admin
    organization: "Red Hat network organization"
    role: admin
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: ensure that nwop belongs to the nw org
  awx.awx.role:
    user: network-operator
    organization: "Red Hat network organization"
    role: member
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: ensure that nwop can only execute templates
  awx.awx.role:
    user: network-operator
    target_team: "Netops"
    role: member
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

# REMOVE HARD CODED SSH_KEY VAR
- name: remove hard coded SSH key var in inventory
  uri:
    url: "https://{{ansible_host}}/api/v2/inventories/2/"
    user: "admin"
    password: "{{admin_password}}"
    method: PATCH
    validate_certs: false
    force_basic_auth: true
    body_format: json
    body: ' {"variables": ""}'
    status_code:
      - 200
      - 204
  register: result_uri
  ignore_errors: true

- name: create show command job in controller
  awx.awx.job_template:
    name: "Network-Commands"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "playbooks/network_commands.yml"
    credential: "Workshop Credential"
    state: "present"
    limit: "cisco"
    survey_enabled: true
    survey_spec: "{{ lookup('template', 'survey_spec.json') }}"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: create reload muiltivendor network template
  awx.awx.job_template:
    name: "Network-Reload"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "playbooks/network_reload.yml"
    credential: "Workshop Credential"
    state: "present"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: create user job in controller
  awx.awx.job_template:
    name: "Network-User"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "playbooks/network_user.yml"
    credential: "Workshop Credential"
    state: "present"
    survey_enabled: true
    survey_spec: "{{ lookup('template', 'user.json') }}"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: create system job in controller
  awx.awx.job_template:
    name: "Network-System"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "playbooks/network_system.yml"
    credential: "Workshop Credential"
    state: "present"
    limit: "cisco"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: create time job in controller
  awx.awx.job_template:
    name: "Network-Time"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "playbooks/network_time.yml"
    credential: "Workshop Credential"
    state: "present"
    limit: "cisco"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

- name: create network report job
  awx.awx.job_template:
    name: "Network-Report"
    job_type: "run"
    inventory: "Workshop Inventory"
    project: "Workshop Project"
    playbook: "playbooks/network_report.yml"
    credential: "Workshop Credential"
    state: "present"
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false

# JOB TEMPLATE PERMISSIONS
- name: ensure that nwop can execute backuip and show commands
  awx.awx.role:
    user: network-operator
    role: execute
    job_template: "{{ item }}"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false
  loop:
    - "Network-Commands"

- name: ensure that nw org can use this workshop inventory
  awx.awx.role:
    role: use
    inventory: "Workshop Inventory"
    team: "{{ item }}"
    state: present
    controller_username: admin
    controller_password: "{{ admin_password }}"
    controller_host: "https://{{ ansible_host }}"
    validate_certs: false
  tags:
    - inv
  loop:
    - Netops
    - Netadmin
